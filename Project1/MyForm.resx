<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAA4ATYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKM4ozQAUUZooAKKKM5oAM1U1bX7HQEga+vbSyW6mW2hM8yxiWVvuxruIyxwcKOTWV8UfiTonwb+Hus
        +LPEl8um6D4etJL7ULoxPKLeFBud9iAu2AM4UEn0ry39lKz/AOF729v8aNehae+8TxO/hWCZfl0DRXY+
        R5SnOye5jCTTuPmYukeSkSAAHuVFNTpTqACjNNbl6/Nfxb8OfAv7Tv8AwWv+ID/FbwD4K+IGg+FfB2re
        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
</value>
  </data>
</root>